????????????????
??????????????module holds all progression relative manipulations
????????????????
????????????????
????????????????
????????????????etProgression()
????????????????---- -Calls to display chapters using displayChapters()
????????????????ogression state usinge isStoryStarted()
????????????????ogression progress percentil using getProgressionValue()
????????????????progressionManager
????????????????ressionManager = {}
????????????????ack button callback
????????????????
????????????????
????????????????OnBehavior = nil
????????????????--- save save total amount of chapter
????????????????nManager.totalChapters = nil
????????????????gressionManager.chapterViewLabel = nil
????????????????vior according to backButtonBehavior callback
????????????????return nil
????????????????ction progressionManager.restoreBackBehavior()
???????????????? Global.setBackBehavior(progressionManager.backButtonBehavior)
..
????????????????progressionData { currentFunction: function|string, branch?:string, ischapter?:boolean, chapterData?:{label:string, cb:function|string, img:string, inventory:table, audio:string, order?:number}}
????????????????ressionManager.setProgression(progressionData)
????????????????progressionManager.restoreBackBehavior()

????????????????--print("progressionManager : Current function :" .. progressionData.currentFunction)
????????????????("progressionManager.lua:28:node : Current function :" .. progressionData.currentFunction)
????????????????state.current_fun = progressionData.currentFunction
????????????????ressionData.branch ~= nil)then
????????????????
????????????????rentBranchName = progressionData.branch
????????????????
????????????????urrentBranchName = Global.current_branch_name
????????????????
????????????????state.visited_funs[progressionData.currentFunction == nil] then
????????????????
????????????????.visited_funs[progressionData.currentFunction] = {}


????????????????Global.table_length(state.visited_funs) == 0) then
???????????????? return false
???????????????? else
???????????????? return true

????????????????eturn math.floor(Global.table_length(progression.load("chaps")) / progressionManager.totalChapters * 100)


????????????????ionData.totalChapters -> Total chapters of the story
????????????????essionData.backBehavior -> function to call with back button pressed
????????????????




????????????????